{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/films/films.component.ts","webpack:///src/app/components/films/films.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/planets/planets.component.ts","webpack:///src/app/components/planets/planets.component.html","webpack:///src/app/components/signup/signup.component.ts","webpack:///src/app/components/signup/signup.component.html","webpack:///src/app/helpers/auth.guard.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login-page/login-page.component.ts","webpack:///src/app/pages/login-page/login-page.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/starWars/star-wars.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FilmsComponent","router","starWarsService","returnToPlanetsEmitter","dataFilms","urlFilms","length","dataSource","forEach","urlFilm","index","getFilms","subscribe","films","push","console","log","emit","LoginComponent","formBuilder","authService","submitted","loginIncorret","loginForm","group","username","required","password","controls","invalid","login","f","value","navigate","PlanetsComponent","displayedColumns","currPage","maxPages","qtdPerPage","hasNext","hasPrevious","goToFilmEvent","getPlanets","page","planets","Math","ceil","data","element","urls","name","search","previousPage","nextPage","SignupComponent","signupIncorrect","registerForm","firstName","lastName","minLength","valueChanges","pipe","res","checkUsername","response","status","errorUsername","error_message","user","signIn","signup","AuthGuard","AuthService","next","state","auth","providedIn","HomePage","route","planet","logOut","logout","LoginPageComponent","isLogin","url","httpOptions","headers","httpClient","apiGruppoMeta","currUserSubject","undefined","currUser","asObservable","usersSubject","users","getValue","find","currUsers","post","addUser","StarWarsService","apiStarWars","p","get","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './helpers/auth.guard';\nimport { HomePage } from './pages/home/home.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  {\n    path: 'login',\n    component: LoginPageComponent,\n  },\n  {\n    path: 'signup',\n    component: LoginPageComponent,\n  },\n  {\n    path: 'planets',\n    component: HomePage,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'StarWars';\n}\n","<div class=\"darkMode\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\n\n//Components\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { PlanetsComponent } from './components/planets/planets.component';\nimport { FilmsComponent } from './components/films/films.component';\n\n//Pages\nimport { HomePage } from './pages/home/home.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    PlanetsComponent,\n    FilmsComponent,\n    HomePage,\n    LoginPageComponent,\n  ],\n  imports: [\n    MatTableModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule, HttpClientModule, NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StarWarsService } from 'src/app/services/starWars/star-wars.service';\n\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.scss']\n})\nexport class FilmsComponent implements OnInit {\n\n  @Input() urlFilms;\n  @Input() planet;\n\n  @Output() returnToPlanetsEmitter = new EventEmitter<any>();\n\n  dataSource;\n\n  constructor(private router: Router, private starWarsService: StarWarsService) { }\n\n  ngOnInit(): void {\n    let dataFilms = [];\n\n    if(this.urlFilms.length === 0) this.dataSource = []\n\n    this.urlFilms.forEach((urlFilm, index) => {\n      this.starWarsService.getFilms(urlFilm).subscribe(films => {\n        dataFilms.push(films)\n\n        if (index >= this.urlFilms.length - 1) {\n          console.log(dataFilms)\n          this.dataSource = dataFilms;\n        }\n      })\n    });\n  }\n\n  returnToPlanets() {\n    this.returnToPlanetsEmitter.emit();\n  }\n}\n","<h1 align=\"center\" class=\"mb-5\">Films in {{planet}}</h1>\n\n\n<div class=\"text-center m-40\" *ngIf=\"!dataSource\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n\n<h4 *ngIf=\"dataSource && dataSource.length === 0\">There are no films in this planet!</h4>\n\n\n<div class=\"d-flex align-items-end flex-column bd-highlight mb-3 h-content\">\n  <div class=\"p-2 bd-highlight\">\n    <div class=\"card mx-5 my-3\" *ngFor=\"let film of dataSource\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col mb-3\">Title</div>\n          <div class=\"col-7 mb-3\">Opening crawl</div>\n          <div class=\"col mb-3\">Director</div>\n          <div class=\"col mb-3\">Producer</div>\n          <div class=\"col mb-3\">Release</div>\n\n\n          <div class=\"w-100\"></div>\n          <div class=\"col\">{{film.title}}</div>\n          <div class=\"col-7\">{{film.opening_crawl}}</div>\n          <div class=\"col\">{{film.director}}</div>\n          <div class=\"col\">{{film.producer}}</div>\n          <div class=\"col\">{{film.release_date | date}}</div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"mt-auto p-2 bd-highlight\">\n\n    <div *ngIf=\"urlFilms\" class=\"mr-5\"><button class=\"btn btn-outline-info\"\n        (click)=\"returnToPlanets()\">Return</button>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  loginIncorret = false;\n\n  constructor(private formBuilder: FormBuilder,  private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  login(){\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    if(this.authService.login(this.f.username.value, this.f.password.value)){\n      this.loginIncorret = false;\n      this.router.navigate([\"/planets\"]);\n    }\n    else{\n      this.loginIncorret = true;\n    }\n  }\n\n}\n","<h2>Login</h2>\n<div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n            <div id=\"username-error\" *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div id=\"password-error\" *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button class=\"btn btn-primary\">\n                Login\n            </button>\n\n           <a routerLink=\"/signup\" class=\"btn btn-link\">Sign in</a>\n        </div>\n        <ngb-alert type='warning' *ngIf=\"loginIncorret\"> Username or password is incorret</ngb-alert>\n\n    </form>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { StarWarsService } from 'src/app/services/starWars/star-wars.service';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.scss']\n})\nexport class PlanetsComponent implements OnInit {\n\n  searchForm: FormGroup;\n\n  displayedColumns: string[] = ['No.', 'name', 'population', 'terrain', 'diameter', 'films'];\n  dataSource;\n\n  currPage = 1;\n  maxPages = 10;\n  qtdPerPage = 10;\n\n  hasNext: boolean = false;\n  hasPrevious: boolean = true;\n\n  @Output() goToFilmEvent = new EventEmitter<any>();\n\n  constructor(private starWarsService: StarWarsService) { }\n\n  ngOnInit(): void {\n    this.getPlanets();\n  }\n\n  getPlanets(page?) {\n    this.starWarsService.getPlanets(page).subscribe(planets => {\n      this.currPage = (page) ? page : 1;\n      this.maxPages = Math.ceil(planets[\"count\"] / this.qtdPerPage)\n\n      this.hasNext = (planets[\"next\"] !== null) ? true : false;\n      this.hasPrevious = (planets[\"previous\"] !== null) ? true : false;\n\n      let data = [];\n\n      planets[\"results\"].forEach(element => {\n        data.push(element)\n      });\n\n      this.dataSource = data\n    })\n  }\n\n  goToFilms(urls, name) {\n    this.goToFilmEvent.emit({ urls: urls, name: name })\n  }\n\n  nextPage() {\n    this.dataSource = null;\n    this.getPlanets(this.currPage + 1);\n  }\n\n  previousPage() {\n    this.dataSource = null;\n    this.getPlanets(this.currPage - 1);\n  }\n\n  search(value) {\n    console.log(value)\n\n    this.starWarsService.search(value).subscribe(planets => {\n      console.log(planets)\n\n      this.currPage = (planets[\"count\"] > 0) ? 1 : 0;\n      this.maxPages = Math.ceil(planets[\"count\"] / this.qtdPerPage)\n\n      this.hasNext = (planets[\"next\"] !== null) ? true : false;\n      this.hasPrevious = (planets[\"previous\"] !== null) ? true : false;\n\n      let data = [];\n\n      planets[\"results\"].forEach(element => {\n        data.push(element)\n      });\n\n      this.dataSource = data\n\n    })\n  }\n\n}\n","<h1 align=\"center\">Planets</h1>\n\n<div class=\"form-inline my-2 my-lg-0\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n    (keydown.enter)=\"search($event.target.value)\">\n  \n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table-p pt-5\">\n    <ng-container matColumnDef=\"No.\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element; let i=index\"> {{(i+1) + (currPage * qtdPerPage) - qtdPerPage}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"population\">\n        <th mat-header-cell *matHeaderCellDef> Population </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.population}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"diameter\">\n        <th mat-header-cell *matHeaderCellDef> Diameter </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.diameter}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"terrain\">\n        <th mat-header-cell *matHeaderCellDef> Terrain </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.terrain}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"films\">\n        <th mat-header-cell *matHeaderCellDef>Films </th>\n        <td mat-cell *matCellDef=\"let element; let i=index\">\n            <button class=\"btn\" (click)=\"goToFilms(element.films, element.name)\"><i\n                    class=\"fas fa-external-link-alt\"></i></button>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div class=\"text-center m-40\" *ngIf=\"!dataSource\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n\n<div class=\"mt-3\" align=\"right\">\n    <span>Page {{currPage}} of {{maxPages}}</span>\n    <button class=\"btn\" [disabled]=\"!hasPrevious\" (click)=\"previousPage()\"><i class=\"fas fa-chevron-left\"></i></button>\n    <button class=\"btn\" [disabled]=\"!hasNext\" (click)=\"nextPage()\"><i class=\"fas fa-chevron-right\"></i></button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  errorUsername: string;\n  signupIncorrect: boolean = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    this.f.username.valueChanges.pipe(debounceTime(1000)).subscribe(res => {\n      this.authService.checkUsername(res).subscribe(response => {\n        console.log(response)\n\n        if (response.status === \"success\") {\n          this.errorUsername = null;\n        }\n        else if (response.status === \"error\") {\n          this.errorUsername = response.error_message;\n        }\n      })\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n\n  signup() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    let user = { name: this.f.firstName.value, lastName: this.f.lastName.value, username: this.f.username.value, password: this.f.password.value };\n\n    this.authService.signIn(user).subscribe(response => {\n\n      if (response.status === \"success\") {\n        if (this.authService.login(this.f.username.value, this.f.password.value)) {\n          this.router.navigate([\"/planets\"]);\n        }\n        else {\n          this.signupIncorrect = true;\n        }\n      }\n    })\n  }\n\n}\n","<h2>Sign In</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"signup()\">\n    <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" \n        [ngClass]=\"{ 'is-invalid': (submitted && f.username.errors) ||  errorUsername}\" />\n        <div *ngIf=\"(submitted && f.username.errors) || errorUsername\" class=\"invalid-feedback\">\n            <div *ngIf=\"(submitted && f.username.errors && f.username.errors.required)\">Username is required</div>\n            <div *ngIf=\"errorUsername\">{{errorUsername}}</div>\n\n        </div>\n\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\">\n            Register\n        </button>\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n    </div>\n\n    <ngb-alert type='warning' *ngIf=\"signupIncorrect\"> We're sorry! The records was not possible at the moment! Try again later!</ngb-alert>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(public AuthService: AuthService, public router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n     \n    return this.AuthService.auth();\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomePage implements OnInit {\n\n  urlFilms;\n  planet;\n\n  constructor(private router: Router, private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  goToFilm(urlFilms, planet) {\n    this.urlFilms = urlFilms;\n    this.planet = planet\n  }\n\n  logout() {\n    this.authService.logOut();\n    this.router.navigate([\"/login\"]);\n  }\n\n  returnToPlanetsEmitter(){\n    console.log(\"wtf meo\")\n    this.urlFilms = null;\n    this.planet = null;\n  }\n\n}\n","<div align=\"right\" class=\"mx-5 mt-5\"> <button class=\"btn btn-outline-info\" (click)=\"logout()\">Log out</button></div>\n\n\n<div class=\"d-flex justify-content-center h-100\">\n    <app-planets *ngIf=\"!urlFilms\" (goToFilmEvent)=\"goToFilm($event.urls, $event.name)\"></app-planets>\n    <app-films *ngIf=\"urlFilms\" [urlFilms]=\"urlFilms\" [planet]=\"planet\" (returnToPlanetsEmitter)=\"returnToPlanetsEmitter()\">\n\n    </app-films>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n\n  isLogin: boolean = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.router.url === \"/login\") this.isLogin = true\n    else this.isLogin = false\n\n  }\n\n}\n","<div class=\"row h-100\">\n    <div class=\"col-5 bg-wars\">\n\n    </div>\n\n    <div  class=\"col-7  d-flex align-items-center justify-content-center\">\n\n        <div class=\"w-50\">\n            <app-login *ngIf=\"isLogin\"></app-login>\n            <app-signup *ngIf=\"!isLogin\"></app-signup>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiGruppoMeta = environment.apiGruppoMeta;\n\n  private currUserSubject = new BehaviorSubject<User>(undefined);\n  currUser = this.currUserSubject.asObservable();\n\n  private usersSubject = new BehaviorSubject<User[]>([{ name: \"Luke\", lastName: \"Skywalker\", username: \"luke\", password: \"luke\" }]);\n  users = this.usersSubject.asObservable();\n\n  constructor(private httpClient: HttpClient) { }\n\n  auth(): boolean {\n    if (this.currUserSubject.getValue())\n      return true;\n    return false;\n  }\n\n  login(username: string, password: string): boolean {\n    let currUser = this.usersSubject.getValue().find(user => user.username === username && user.password === password)\n    if (currUser) {\n      this.currUserSubject.next(currUser);\n      return true;\n    }\n    return false;\n  }\n\n  addUser(user: User) {\n    let currUsers = this.usersSubject.getValue();\n    currUsers.push(user);\n    this.usersSubject.next(currUsers);\n  }\n\n  checkUsername(username: string): Observable<any> {\n    return this.httpClient.post<any>(this.apiGruppoMeta + \"check-username/\", '{\"username\": \"'+ username +'\"}', httpOptions);\n  }\n\n  signIn(user: User): any{\n    this.addUser(user);\n    return this.httpClient.post<User>(this.apiGruppoMeta + \"registration/\", user, httpOptions)\n  }\n\n  logOut(){\n    this.currUserSubject.next(null);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StarWarsService {\n\n  private apiStarWars = environment.apiStarWars;\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getPlanets(page?: string) {\n    let p = (page) ? \"?page=\"+page : \"\";\n    return this.httpClient.get(this.apiStarWars + \"planets/\" + p, httpOptions)\n  }\n\n  public getFilms(url) {\n    return this.httpClient.get<any>(url, httpOptions);\n  }\n\n  public search(value){\n    return this.httpClient.get<any>(this.apiStarWars + \"planets/?search=\"+value, httpOptions)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiGruppoMeta: \"http://lab.gruppometa.it/test-js/\",\n  apiStarWars: \"https://swapi.dev/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}