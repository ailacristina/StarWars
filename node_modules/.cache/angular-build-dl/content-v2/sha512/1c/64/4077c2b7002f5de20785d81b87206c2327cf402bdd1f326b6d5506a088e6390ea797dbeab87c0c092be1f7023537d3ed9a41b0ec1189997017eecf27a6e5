{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/films/films.component.ts","./src/app/components/films/films.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/planets/planets.component.ts","./src/app/components/planets/planets.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/helpers/auth.guard.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/services/auth/auth.service.ts","./src/app/services/starWars/star-wars.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './helpers/auth.guard';\nimport { HomePage } from './pages/home/home.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\n  {\n    path: 'login',\n    component: LoginPageComponent,\n  },\n  {\n    path: 'signup',\n    component: LoginPageComponent,\n  },\n  {\n    path: 'planets',\n    component: HomePage,\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'StarWars';\n}\n","<div class=\"darkMode\">\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\n\n//Components\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { PlanetsComponent } from './components/planets/planets.component';\nimport { FilmsComponent } from './components/films/films.component';\n\n//Pages\nimport { HomePage } from './pages/home/home.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    PlanetsComponent,\n    FilmsComponent,\n    HomePage,\n    LoginPageComponent,\n  ],\n  imports: [\n    MatTableModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule, HttpClientModule, NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { StarWarsService } from 'src/app/services/starWars/star-wars.service';\n\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.scss']\n})\nexport class FilmsComponent implements OnInit {\n\n  @Input() urlFilms;\n  @Input() planet;\n\n  @Output() returnToPlanetsEmitter = new EventEmitter<any>();\n\n  dataSource;\n\n  constructor(private router: Router, private starWarsService: StarWarsService) { }\n\n  ngOnInit(): void {\n    let dataFilms = [];\n\n    if(this.urlFilms.length === 0) this.dataSource = []\n\n    this.urlFilms.forEach((urlFilm, index) => {\n      this.starWarsService.getFilms(urlFilm).subscribe(films => {\n        dataFilms.push(films)\n\n        if (index >= this.urlFilms.length - 1) {\n          console.log(dataFilms)\n          this.dataSource = dataFilms;\n        }\n      })\n    });\n  }\n\n  returnToPlanets() {\n    this.returnToPlanetsEmitter.emit();\n  }\n}\n","<h1 align=\"center\" class=\"mb-5\">Films in {{planet}}</h1>\n\n\n<div class=\"text-center m-40\" *ngIf=\"!dataSource\">\n  <div class=\"spinner-border\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n\n<h4 *ngIf=\"dataSource && dataSource.length === 0\">There are no films in this planet!</h4>\n\n\n<div class=\"d-flex align-items-end flex-column bd-highlight mb-3 h-content\">\n  <div class=\"p-2 bd-highlight\">\n    <div class=\"card mx-5 my-3\" *ngFor=\"let film of dataSource\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <div class=\"col mb-3\">Title</div>\n          <div class=\"col-7 mb-3\">Opening crawl</div>\n          <div class=\"col mb-3\">Director</div>\n          <div class=\"col mb-3\">Producer</div>\n          <div class=\"col mb-3\">Release</div>\n\n\n          <div class=\"w-100\"></div>\n          <div class=\"col\">{{film.title}}</div>\n          <div class=\"col-7\">{{film.opening_crawl}}</div>\n          <div class=\"col\">{{film.director}}</div>\n          <div class=\"col\">{{film.producer}}</div>\n          <div class=\"col\">{{film.release_date | date}}</div>\n        </div>\n\n      </div>\n    </div>\n  </div>\n  <div class=\"mt-auto p-2 bd-highlight\">\n\n    <div *ngIf=\"urlFilms\" class=\"mr-5\"><button class=\"btn btn-outline-info\"\n        (click)=\"returnToPlanets()\">Return</button>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  loginIncorret = false;\n\n  constructor(private formBuilder: FormBuilder,  private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  login(){\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    if(this.authService.login(this.f.username.value, this.f.password.value)){\n      this.loginIncorret = false;\n      this.router.navigate([\"/planets\"]);\n    }\n    else{\n      this.loginIncorret = true;\n    }\n  }\n\n}\n","<h2>Login</h2>\n<div>\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n        <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input id=\"username\" type=\"text\" formControlName=\"username\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n            <div id=\"username-error\" *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.username.errors.required\">Username is required</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" class=\"form-control\"\n                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div id=\"password-error\" *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <button class=\"btn btn-primary\">\n                Login\n            </button>\n\n           <a routerLink=\"/signup\" class=\"btn btn-link\">Sign in</a>\n        </div>\n        <ngb-alert type='warning' *ngIf=\"loginIncorret\"> Username or password is incorret</ngb-alert>\n\n    </form>\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { StarWarsService } from 'src/app/services/starWars/star-wars.service';\n\n@Component({\n  selector: 'app-planets',\n  templateUrl: './planets.component.html',\n  styleUrls: ['./planets.component.scss']\n})\nexport class PlanetsComponent implements OnInit {\n\n  searchForm: FormGroup;\n\n  displayedColumns: string[] = ['No.', 'name', 'population', 'terrain', 'diameter', 'films'];\n  dataSource;\n\n  currPage = 1;\n  maxPages = 10;\n  qtdPerPage = 10;\n\n  hasNext: boolean = false;\n  hasPrevious: boolean = true;\n\n  @Output() goToFilmEvent = new EventEmitter<any>();\n\n  constructor(private starWarsService: StarWarsService) { }\n\n  ngOnInit(): void {\n    this.getPlanets();\n  }\n\n  getPlanets(page?) {\n    this.starWarsService.getPlanets(page).subscribe(planets => {\n      this.currPage = (page) ? page : 1;\n      this.maxPages = Math.ceil(planets[\"count\"] / this.qtdPerPage)\n\n      this.hasNext = (planets[\"next\"] !== null) ? true : false;\n      this.hasPrevious = (planets[\"previous\"] !== null) ? true : false;\n\n      let data = [];\n\n      planets[\"results\"].forEach(element => {\n        data.push(element)\n      });\n\n      this.dataSource = data\n    })\n  }\n\n  goToFilms(urls, name) {\n    this.goToFilmEvent.emit({ urls: urls, name: name })\n  }\n\n  nextPage() {\n    this.dataSource = null;\n    this.getPlanets(this.currPage + 1);\n  }\n\n  previousPage() {\n    this.dataSource = null;\n    this.getPlanets(this.currPage - 1);\n  }\n\n  search(value) {\n    console.log(value)\n\n    this.starWarsService.search(value).subscribe(planets => {\n      console.log(planets)\n\n      this.currPage = (planets[\"count\"] > 0) ? 1 : 0;\n      this.maxPages = Math.ceil(planets[\"count\"] / this.qtdPerPage)\n\n      this.hasNext = (planets[\"next\"] !== null) ? true : false;\n      this.hasPrevious = (planets[\"previous\"] !== null) ? true : false;\n\n      let data = [];\n\n      planets[\"results\"].forEach(element => {\n        data.push(element)\n      });\n\n      this.dataSource = data\n\n    })\n  }\n\n}\n","<h1 align=\"center\">Planets</h1>\n\n<div class=\"form-inline my-2 my-lg-0\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n    (keydown.enter)=\"search($event.target.value)\">\n  \n</div>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 table-p pt-5\">\n    <ng-container matColumnDef=\"No.\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element; let i=index\"> {{(i+1) + (currPage * qtdPerPage) - qtdPerPage}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"population\">\n        <th mat-header-cell *matHeaderCellDef> Population </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.population}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"diameter\">\n        <th mat-header-cell *matHeaderCellDef> Diameter </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.diameter}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"terrain\">\n        <th mat-header-cell *matHeaderCellDef> Terrain </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.terrain}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"films\">\n        <th mat-header-cell *matHeaderCellDef>Films </th>\n        <td mat-cell *matCellDef=\"let element; let i=index\">\n            <button class=\"btn\" (click)=\"goToFilms(element.films, element.name)\"><i\n                    class=\"fas fa-external-link-alt\"></i></button>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div class=\"text-center m-40\" *ngIf=\"!dataSource\">\n    <div class=\"spinner-border\" role=\"status\">\n        <span class=\"sr-only\">Loading...</span>\n    </div>\n</div>\n\n<div class=\"mt-3\" align=\"right\">\n    <span>Page {{currPage}} of {{maxPages}}</span>\n    <button class=\"btn\" [disabled]=\"!hasPrevious\" (click)=\"previousPage()\"><i class=\"fas fa-chevron-left\"></i></button>\n    <button class=\"btn\" [disabled]=\"!hasNext\" (click)=\"nextPage()\"><i class=\"fas fa-chevron-right\"></i></button>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  registerForm: FormGroup;\n  submitted = false;\n  errorUsername: string;\n  signupIncorrect: boolean = false;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n\n    this.f.username.valueChanges.pipe(debounceTime(1000)).subscribe(res => {\n      this.authService.checkUsername(res).subscribe(response => {\n        console.log(response)\n\n        if (response.status === \"success\") {\n          this.errorUsername = null;\n        }\n        else if (response.status === \"error\") {\n          this.errorUsername = response.error_message;\n        }\n      })\n    });\n  }\n\n  get f() { return this.registerForm.controls; }\n\n\n  signup() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    let user = { name: this.f.firstName.value, lastName: this.f.lastName.value, username: this.f.username.value, password: this.f.password.value };\n\n    this.authService.signIn(user).subscribe(response => {\n\n      if (response.status === \"success\") {\n        if (this.authService.login(this.f.username.value, this.f.password.value)) {\n          this.router.navigate([\"/planets\"]);\n        }\n        else {\n          this.signupIncorrect = true;\n        }\n      }\n    })\n  }\n\n}\n","<h2>Sign In</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"signup()\">\n    <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" \n        [ngClass]=\"{ 'is-invalid': (submitted && f.username.errors) ||  errorUsername}\" />\n        <div *ngIf=\"(submitted && f.username.errors) || errorUsername\" class=\"invalid-feedback\">\n            <div *ngIf=\"(submitted && f.username.errors && f.username.errors.required)\">Username is required</div>\n            <div *ngIf=\"errorUsername\">{{errorUsername}}</div>\n\n        </div>\n\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-primary\">\n            Register\n        </button>\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n    </div>\n\n    <ngb-alert type='warning' *ngIf=\"signupIncorrect\"> We're sorry! The records was not possible at the moment! Try again later!</ngb-alert>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(public AuthService: AuthService, public router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n     \n    return this.AuthService.auth();\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomePage implements OnInit {\n\n  urlFilms;\n  planet;\n\n  constructor(private router: Router, private route: ActivatedRoute, private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  goToFilm(urlFilms, planet) {\n    this.urlFilms = urlFilms;\n    this.planet = planet\n  }\n\n  logout() {\n    this.authService.logOut();\n    this.router.navigate([\"/login\"]);\n  }\n\n  returnToPlanetsEmitter(){\n    console.log(\"wtf meo\")\n    this.urlFilms = null;\n    this.planet = null;\n  }\n\n}\n","<div align=\"right\" class=\"mx-5 mt-5\"> <button class=\"btn btn-outline-info\" (click)=\"logout()\">Log out</button></div>\n\n\n<div class=\"d-flex justify-content-center h-100\">\n    <app-planets *ngIf=\"!urlFilms\" (goToFilmEvent)=\"goToFilm($event.urls, $event.name)\"></app-planets>\n    <app-films *ngIf=\"urlFilms\" [urlFilms]=\"urlFilms\" [planet]=\"planet\" (returnToPlanetsEmitter)=\"returnToPlanetsEmitter()\">\n\n    </app-films>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n\n  isLogin: boolean = true;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.router.url === \"/login\") this.isLogin = true\n    else this.isLogin = false\n\n  }\n\n}\n","<div class=\"row h-100\">\n    <div class=\"col-5 bg-wars\">\n\n    </div>\n\n    <div  class=\"col-7  d-flex align-items-center justify-content-center\">\n\n        <div class=\"w-50\">\n            <app-login *ngIf=\"isLogin\"></app-login>\n            <app-signup *ngIf=\"!isLogin\"></app-signup>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/models/user';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiGruppoMeta = environment.apiGruppoMeta;\n\n  private currUserSubject = new BehaviorSubject<User>(undefined);\n  currUser = this.currUserSubject.asObservable();\n\n  private usersSubject = new BehaviorSubject<User[]>([{ name: \"Luke\", lastName: \"Skywalker\", username: \"luke\", password: \"luke\" }]);\n  users = this.usersSubject.asObservable();\n\n  constructor(private httpClient: HttpClient) { }\n\n  auth(): boolean {\n    if (this.currUserSubject.getValue())\n      return true;\n    return false;\n  }\n\n  login(username: string, password: string): boolean {\n    let currUser = this.usersSubject.getValue().find(user => user.username === username && user.password === password)\n    if (currUser) {\n      this.currUserSubject.next(currUser);\n      return true;\n    }\n    return false;\n  }\n\n  addUser(user: User) {\n    let currUsers = this.usersSubject.getValue();\n    currUsers.push(user);\n    this.usersSubject.next(currUsers);\n  }\n\n  checkUsername(username: string): Observable<any> {\n    return this.httpClient.post<any>(this.apiGruppoMeta + \"check-username/\", '{\"username\": \"'+ username +'\"}', httpOptions);\n  }\n\n  signIn(user: User): any{\n    this.addUser(user);\n    return this.httpClient.post<User>(this.apiGruppoMeta + \"registration/\", user, httpOptions)\n  }\n\n  logOut(){\n    this.currUserSubject.next(null);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StarWarsService {\n\n  private apiStarWars = environment.apiStarWars;\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getPlanets(page?: string) {\n    let p = (page) ? \"?page=\"+page : \"\";\n    return this.httpClient.get(this.apiStarWars + \"planets/\" + p, httpOptions)\n  }\n\n  public getFilms(url) {\n    return this.httpClient.get<any>(url, httpOptions);\n  }\n\n  public search(value){\n    return this.httpClient.get<any>(this.apiStarWars + \"planets/?search=\"+value, httpOptions)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiGruppoMeta: \"http://lab.gruppometa.it/test-js/\",\n  apiStarWars: \"https://swapi.dev/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}